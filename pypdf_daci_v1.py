# -*- coding: utf-8 -*-
"""PyPDF_DACI_v1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sXz07z81JgGXeoipYFTk_iGCZMVcvxHY

**Objetivo:**
El objetivo es crear un dataframe a partir de la información que podamos extraer de un pdf

En primer lugar analizamos con qué versión de Pythoin está trabajando Google Colab
"""

!python --version

"""Ahora importamos Panda con el "alias" pd. Será una forma de referirnos a Panda a los largo del código.

Suele utilizarse siempre pd como alias de Panda
"""

import pandas as pd
pd.__version__

"""Ahora instalamos PyPDF2 que será el paquete de Python que nos permitirá interactuar con los pdfs de los que queramos sacar información"""

!pip install PyPDF2

"""Ahora vamos a analizar los pdf's que hay en una carpeta de Google Drive. Recuerda que debes "Montar Google Drive" antes de correr el código."""

# Importamos glob ya que vamos a manejar los pdfs mediante un glob y lo mismo hacemos con os y PyPDF2
import glob, os
import PyPDF2

# Definimos la extensión con la que vamos a trabajar y definimos la variable en la que se almacenarán todos los archivos (pdf) que habrá en la carpeta de Drive en la que deseamos buscar
ext = "*.pdf"
# Definimos la ruta (PATH) en la que estarán almacenados todos los pdfs's que queremos analizar
PATH = "/content/drive/MyDrive/ATD_Motril/Cosas_CEP_Motril/Tomas_Conocimiento"

# Definimos una string en la que uniremos todos los archivos de la ruta con extensión pdf
archivos = []

for dirpath, dirnames, filenames in os.walk(PATH):
    archivos += glob.glob(os.path.join(dirpath, ext))

"""Iniciamos los strings en los que almacenaremos los datos para crear el dataframe con los campos deseados"""

# Iniciamos las variables en las que alamcenaremos los datos que queremos almacenar en el datframe

persona = [] #Se refiere al nombre de la persona que aparece en el documento
#tarjeta= []
coord = []
verif = []
#date = []
tipo = []
nif = []
act = []
cep = []
ref = []

nombres = [] #Se refiere al nombre del pdf

for idx, filename in enumerate(archivos):
  print(filename)
  pdf_reader = PyPDF2.PdfReader(filename)
  # Trabajamos solamente con la primera hoja del pdf ya que los datos que queremos obtener aparecen ya en ella (en el pie del documento)
  page = pdf_reader.pages[0]
  # Ahora extraemos el texto del pdf para poder analizarlo
  text = page.extract_text()
  # Dividimos el texto en líneas
  lines = text.split('\n')

  #Agregamos el nombre del archivo a la lista
  nombres.append(os.path.basename(filename))

  for line in lines:


    if 'Coord.' in line:
        index_coord = line.find('Coord.')  # Encontrar el índice donde aparece "Coord."
        if index_coord != -1:  # Si se encontró "Coord."
            docente = line[:index_coord].strip()  # Obtener todos los caracteres desde el inicio hasta "Coord."
        else:
            docente = line.strip()  # Si "Coord." no se encuentra, tomar toda la línea
        persona.append(docente)

    if 'NIF' in line:
      dni = line.split('NIF')[1].strip()
      dni = dni.replace("NIF ","")
      nif.append(dni[:9])

    if 'código' in line:
      code = line.split('código')[1].strip()
      code = code.replace("código ","")
      act.append(code[:12])

    if 'CEP Motril' in line:
      #cepMotril = line.split('CEP')[1].strip()
      #cepMotril = cepMotril.replace("CE ","")
      cep.append('18200028')

    if 'Coord.' in line:
      coordenadas = line.split('Coord.')[1].strip()
      coordenadas = coordenadas.replace("Coord. ","")
      coord.append(coordenadas[:6])

    if 'Ref:' in line:
      referencia = line.split('Ref:')[1].strip()
      referencia = referencia.replace("Ref: ","")
      ref.append(referencia[:8])

    if 'VERIFICACIÓN' in line:
      verificacion = line.split('VERIFICACIÓN')[1].strip()
      verificacion = verificacion.replace("Verificación: ","")
      verif.append(verificacion[:30])

    if 'DECLARACIÓN RESPONSABLE' in line:
      #daci = line.split('DECLARACIÓN RESPONSABLE')[1].strip()
      #daci = daci.replace(": ", "")  # Eliminamos el ":" después de "DECLARACIÓN RESPONSABLE"
      tipo.append('DECLARACIÓN RESPONSABLE')


data = {'Archivo':nombres, 'Apellidos, Nombre':persona,  'DNI':nif, 'Código Actividad':act, 'Código CEP':cep, 'Coordenadas':coord, 'Tarjeta de coordenadas':ref, 'Verificacion':verif, 'Tipo de documento':tipo}
df = pd.DataFrame(data)
df

"""Ahora vamos a converti el dataframe en csv y despues lo vamos a descargar"""

from google.colab import files
df.to_csv('prueba.csv')
files.download('prueba.csv')

"""Exportar a formato excel (.xlsx) y descargar"""

df.to_excel('prueba.xlsx')
files.download('prueba.xlsx')

"""Ahora vamos a crear un Google Sheets en la misma carpeta

"""